[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yalht"
version = "0.1.0"
description = "Deep Learning training pipeline template based on pytorch_lightning and hydra"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    # --------- pytorch ---------
    "torch>=1.10.0",
    "torchvision>=0.11.0",
    "pytorch-lightning==1.8.3",
    "torchmetrics==0.11.0",
    # --------- hydra ---------
    "hydra-core==1.3.1",
    "hydra-colorlog==1.2.0",
    "hydra-optuna-sweeper==1.2.0",
    # --------- loggers ---------
    "wandb",
    # --------- others ---------
    "pyrootutils",
    "rich",
    "sh; platform_system != 'Windows'",
    "omegaconf",
    "tqdm",
    "tensorflow",
    "pynvml",
    # --------- data ---------
    "numpy",
    "Pillow",
    "opencv-python-headless",
    "albumentations",
    "h5py",
    # --------- models ---------
    "timm",
    "segmentation-models-pytorch",
    # --------- visualization ---------
    "seaborn",
    "scikit-learn",
    "matplotlib",
    "ipython",
    "grad-cam==1.3.1",
    "ttach==0.0.3",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest",
    "ruff",
]
loggers = [
    "neptune-client",
    "mlflow",
    "comet-ml",
]

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
markers = [
  "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 79
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), isort (I), and others
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "T20",    # flake8-print
    "SIM",    # flake8-simplify
]

# Ignore specific rules that were ignored in the old flake8 config
ignore = [
    "E402",   # module level import not at top of file
    "F401",   # imported but unused
    "F841",   # local variable is assigned but never used
]

# Exclude directories
exclude = [
    "logs",
    "data",
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".venv",
    "venv",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["T20"]       # Allow print statements in tests

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.format]
# Use single quotes for strings
quote-style = "double"
# Indent with spaces
indent-style = "space"
